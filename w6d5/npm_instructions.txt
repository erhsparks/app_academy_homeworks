Summary

npm init --yes: Initializes an app with NPM by generating a boilerplate package.json.
npm install --save <package_name>: Installs and lists a NPM package as a dependency in a package.json.
npm install: Downloads all JavaScript dependencies listed in a package.json.
Add a webpack script to enable npm run webpack.


& gitignore it bc webpack creates a ton of big, extraneous files:

# .gitignore

node_modules/
bundle.js
bundle.js.map

& webpack configuration:

// webpack.config.js

module.exports = {
  entry: "frontend/my_app.jsx",
  output: {
    path: "app/assets/javascripts", <-- important for Rails so that it ends up in the asset pipeline
    filename: "bundle.js"
  }
  devtool: 'source-map',
  resolve: {
    extensions: ['', '.js', '.jsx']
  },
};

By including an empty string as an option, you can write import statements more succinctly. For example,

import App from './components/app';
import { createTodos } from './actions/todos';

//Sample webpack.config.js :

// webpack.config.js

module.exports = {
  entry: 'path/to/entry.jsx',
  output: {
    path: 'app/assets/javascripts',
    filename: 'bundle.js',
  },
  module: {
    loaders: [
      {
        test: [/\.jsx?$/, /\.js?$/],
        exclude: /(node_modules)/,
        loader: 'babel',
        query: {
          presets: ['es2015', 'react']
        }
      }
    ]
  },
  devtool: 'source-map',
  resolve: {
    extensions: ['', '.js', '.jsx' ]
  }
};
